/**
 *
 * @param {string} msg - The value typed into the chatbot: For example: "Katie"
 * @returns {string} The text that will be used as the bot reply and shown to the user. For example: "Hello Katie, do you take milk in your tea?"
 *
 */
let name = false;
let size = false;
const getBotReply = (message) => {
  message = message.toLowerCase();
  if (!name) {
    if (message === "") {
      return "I don't recognise that as a name - try again";
    }
    name = message;
    return `Nice to meet you ${name}. Are you wanting to adopt a small dog or a big dog?`;
  }

  if (message === "reset") {
    name = false;
    size = false;
    return `Hi there! Lets find you your new best friend. First of all, what's your name?`;
  }

  if (message === "thanks") {
    name = false;
    size = false;
    return "No problem! Have fun with your new friend!";
  }

  if (size) {
    if (message === "dachschund") {
      return `Great choice ${name}! This breed is most happy when given companionship and a job to do.`;
    }

    if (message === "jack russell") {
      return `Great choice ${name}! This breed is a loyal companion and is good with children.`;
    }

    if (message === "st bernard") {
      return `Great choice ${name}! St Bernard's are one of the biggest breeds in the world. They were bred for mountain rescues.`;
    }

    if (message === "husky") {
      return `Great choice ${name}! Huskies quite often have different coloured eyes.`;
    }

    return "I don't recognise that breed - please try again";
  }

  if (name) {
    if (message === "small") {
      size = message;
      return "Small dog? Great! Would you prefer a Jack Russell or Dachschund?";
    }

    if (message === "big") {
      size = message;
      return "Big dog? Great! Would you prefer a St Bernard or a Husky?";
    }

    return "I don't recognise that - please enter small or big";
  }
};
export { getBotReply };


// Dynamically import modules, so they can be reset between test runs
// https://github.com/facebook/jest/issues/3236
// https://www.npmjs.com/package/babel-plugin-dynamic-import-node
let getBotReply;

beforeEach(() => {
  return import("../Submission/script").then((module) => {
    getBotReply = module.getBotReply;
    jest.resetModules();
  });
});

describe("getBotReply", () => {
  it("should reply with name and question about dog size", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    // Uncomment the following line and update your expectation
    expect(botReply1).toEqual(expectedReply1);
  });

  it("should reply with what size they want to adopt, big or small", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    // Uncomment the following line and update your expectation
    expect(botReply1).toEqual(expectedReply1);

    const botReply2 = getBotReply("small");
    const expectedReply2 =
      "Small dog? Great! Would you prefer a Jack Russell or Dachschund?";

    // Uncomment the following line and update your expectation
    expect(botReply2).toEqual(expectedReply2);
  });

  it("should reply with what size they want to adopt, big or small", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    // Uncomment the following line and update your expectation
    expect(botReply1).toEqual(expectedReply1);

    const botReply2 = getBotReply("big");
    const expectedReply2 =
      "Big dog? Great! Would you prefer a St Bernard or a Husky?";

    // Uncomment the following line and update your expectation
    expect(botReply2).toEqual(expectedReply2);
  });

  it("should reply with either Dachschund or Jack Russell", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    expect(botReply1).toEqual(expectedReply1);

    const botReply2 = getBotReply("small");
    const expectedReply2 =
      "Small dog? Great! Would you prefer a Jack Russell or Dachschund?";

    expect(botReply2).toEqual(expectedReply2);

    // Input: dachschund;
    const botReply3 = getBotReply("dachschund");
    // Output: "Great choice. This breed is most happy when given companionship and a job to do."
    const expectedReply3 =
      "Great choice name! This breed is most happy when given companionship and a job to do.";

    // Uncomment the following line and update your expectation
    expect(botReply3).toEqual(expectedReply3);
  });

  it("should reply with either Dachschund or Jack Russell", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    expect(botReply1).toEqual(expectedReply1);

    const botReply2 = getBotReply("small");
    const expectedReply2 =
      "Small dog? Great! Would you prefer a Jack Russell or Dachschund?";

    expect(botReply2).toEqual(expectedReply2);

    // Input: jack russell;
    const botReply3 = getBotReply("jack russell");
    // Output: "Great choice. This breed is most happy when given companionship and a job to do.";
    const expectedReply3 =
      "Great choice name! This breed is a loyal companion and is good with children.";

    // Uncomment the following line and update your expectation
    expect(botReply3).toEqual(expectedReply3);
  });

  it("should reply with either Husky or St Bernard", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    expect(botReply1).toEqual(expectedReply1);

    const botReply2 = getBotReply("big");
    const expectedReply2 =
      "Big dog? Great! Would you prefer a St Bernard or a Husky?";

    expect(botReply2).toEqual(expectedReply2);

    // Input: St Bernard;
    const botReply3 = getBotReply("st bernard");
    // Output: "Great choice name! St Bernard's are one of the biggest breeds in the world. They were bred for mountain rescues.";
    const expectedReply3 =
      "Great choice name! St Bernard's are one of the biggest breeds in the world. They were bred for mountain rescues.";

    // Uncomment the following line and update your expectation
    expect(botReply3).toEqual(expectedReply3);
  });

  it("should reply with either Husky or St Bernard", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    expect(botReply1).toEqual(expectedReply1);

    const botReply2 = getBotReply("big");
    const expectedReply2 =
      "Big dog? Great! Would you prefer a St Bernard or a Husky?";

    expect(botReply2).toEqual(expectedReply2);

    // Input: Husky;
    const botReply3 = getBotReply("husky");
    // Output: "Great choice name! Huskies quite often have different coloured eyes.";
    const expectedReply3 =
      "Great choice name! Huskies quite often have different coloured eyes.";

    // Uncomment the following line and update your expectation
    expect(botReply3).toEqual(expectedReply3);
  });

  it("should reset to original page when reset typed", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    // Uncomment the following line and update your expectation
    expect(botReply1).toEqual(expectedReply1);

    const botReply2 = getBotReply("reset");
    const expectedReply2 =
      "Hi there! Lets find you your new best friend. First of all, what's your name?";

    expect(botReply2).toEqual(expectedReply2);
  });

  it("should reply saying thanks, enjoy new friend", () => {
    const botReply1 = getBotReply("name");
    const expectedReply1 =
      "Nice to meet you name. Are you wanting to adopt a small dog or a big dog?";

    // Uncomment the following line and update your expectation
    expect(botReply1).toEqual(expectedReply1);

    const botReply2 = getBotReply("thanks");
    const expectedReply2 = "No problem! Have fun with your new friend!";

    expect(botReply2).toEqual(expectedReply2);
  });

  it("if no name is typed, promt for an answer", () => {
    const botReply1 = getBotReply("");
    const expectedReply1 = "I don't recognise that as a name - try again";

    expect(botReply1).toEqual(expectedReply1);
  });
});
